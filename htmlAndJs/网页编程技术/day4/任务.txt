HTML 框架
<iframe src="URL"></iframe>
常用属性
    frameborder
    width
    height
    name
    scrolling="auto|yes|no"
    src

一、什么是CSS
CSS 指层叠样式表 (Cascading Style Sheets)
样式通常存储在样式表中
把样式添加到 HTML中，是为了解决内容与表现分离的问题
外部样式表可以极大提高工作效率
外部样式表通常存储在 CSS 文件中
多个样式定义可层叠为一

1）浏览器默认有样式
2）css一般放入head里面


二、CSS的语法
    每条声明由一个属性和一个值组成。
    CSS声明总是以分号(;)结束，声明组以大括号({})括起来:

三、常用的样式
    1)背景
        background-color
        background-image:url("")
        background-repeat:(repeat-x|repeat|no-repeat)
        background-attachment:fixed //背景随着滚动条滚动
        background-position:center
    
    2)CSS 文本格式
        color
        text-align
        text-decoration(overline|line-through|underline)
        text-transform(uppercase|lowercase|capitalize)

    3)CSS 字体
        font-family("宋体"|"黑体")
        font-size(20em)
        font-style(normal|italic)
        font-weight:(normal [bold [100-900])
        
    4)CSS链接
        a:link - 正常，未访问过的链接
        a:visited - 用户已访问过的链接
        a:hover - 当用户鼠标放在链接上时
        a:active - 链接被点击的那一刻
        注意：a:hover 必须跟在 a:link 和 a:visited后面，a:active 必须跟在 a:hover后面
        实例
        a:link {color:#000000;}      /* 未访问链接*/
        a:visited {color:#00FF00;}  /* 已访问链接 */
        a:hover {color:#FF00FF;}  /* 鼠标移动到链接上 */
        a:active {color:#0000FF;}  /* 鼠标点击时 */
    
    5)CSS 列表
        ul.a {list-style-type:circle;}
        ul.b {list-style-type:square;}
        ul.c {list-style-type:none;}
    
    6)table
        border: 1px solid black;
        border-collapse: collapse; 设置表格的边框是否被折叠成一个单一的边框或隔开：
        列子
        table {
            border-collapse:collapse;
        }
        table, th, td {
            border: 1px solid black;
        }

===================================================================  分割线 ===========================================================================
        
        
一、CSS样式第二部分
    1）盒子模型
        CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。
        盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。
        
        图片说明了盒子模型(Box Model)：
        
        Margin(外边距) - 清除边框外的区域，外边距是透明的。
        Border(边框) - 围绕在内边距和内容外的边框。
        Padding(内边距) - 清除内容周围的区域，内边距是透明的。
        Content(内容) - 盒子的内容，显示文本和图像。

    2)浏览器的兼容性问题
        一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。
        虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。
        IE8 及更早IE版本不支持 填充的宽度和边框的宽度属性设。
        解决IE8及更早版本不兼容问题可以在HTML页面声明 <!DOCTYPE html>即可。
    
    3)CSS 边框
        border-style属性用来定义边框的样式
        none: 默认无边框
        dotted: dotted:定义一个点线边框
        dashed: 定义一个虚线边框
        solid: 定义实线边框
        double: 定义两个边框。 两个边框的宽度和 border-width 的值相同
     边框宽度
        border-style:solid;
        border-width:5px;
     边框颜色
        border-color
     边框-单独设置各边
        p{
            border-top-style:dotted;
            border-right-style:solid;
            border-bottom-style:dotted;
            border-left-style:solid;
        }
        
    4)CSS 轮廓（outline）
        轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。
        轮廓（outline）属性指定元素轮廓的样式、颜色和宽度。
        例子
        p{
            border:30px solid red;
            outline:blue solid 5px;
        }
    
    5)CSS Margin(外边距)
        定义元素距离周围的空间。
        margin	简写属性。在一个声明中设置所有外边距属性。
        margin-bottom	设置元素的下外边距。
        margin-left	设置元素的左外边距。
        margin-right	设置元素的右外边距。
        margin-top	设置元素的上外边距。
    6)CSS Padding（填充）
        定义元素边框与元素内容之间的空间。
        padding-top:25px;
        padding-bottom:25px;
        padding-right:50px;
        padding-left:50px;
        简写
        padding:25px 50px;
        
    7)CSS 分组和嵌套选择器
        几种标签样式一样可以分组方式编写
        h1,h2,p{
            color:green;
        }
    
        1.四个基础选择器：
            标签选择器：
                A{
                    凡是标签名是A的标签都能读到A里面的样式
                }
            类选择器
                .c{
                   凡是标签里面class='c'的标签都能读到样式
                }
            ID选择器
                #d{
                    凡是标签里面id='d'的标签都能读到样式
                }
            全选择器
                *{
                    所有的标签都执行里面的样式
                }

            选择器的优先级：ID选择器>类选择器>标签选择器>*选择器

        css遵循选择器的优先级，还遵循就近原则。
        
        2.嵌套选择器
            p{
                color:blue;
                text-align:center;
            }
            .marked
            {
                background-color:red;
            }
            .marked p
            {
                color:white;
            }
        
        
        
        
    
1.定义样式的方式
    内联样式（<a style="">）,
    内部样式(<style></style>, 一般写在head里),
    外部样式（写在css文件中的样式）
    
1 内联式：
<div style=""></div>

2 内部式：
<style type='text/css'>
</style>

3 外联式：可以使HTML页面更为简洁
在文件目录下面新建一个css的文件夹
在文件夹里面新建一个xx.css的文件，样式就写在里面
在head里面用<link rel="stylesheet" type="text/css" href="css/demo.css" />引入一个外部样式




布局里面的第一个：
  浮动：float  取值left或者right
  清除浮动 clear:both
外补白：
    margin 是边框和外面的距离
内补白：
    padding 内容和边框的距离

   



