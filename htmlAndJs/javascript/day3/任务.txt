作用域
	作用域可访问变量的区域
	局部变量：只能在函数内部访问。
	全局变量有 全局作用域: 网页中所有脚本和函数均可使用。
	如果变量在函数内没有声明（没有使用 var 关键字），该变量为全局变量。
	function myFunction() {
		carName = "Volvo";
		// 此处可调用 carName 变量
	}
	alert(cartName);
	
变量生命周期
	变量生命周期在它声明时初始化。
	局部变量在函数执行完毕后销毁。
	全局变量在页面关闭后销毁。
	
特殊字符
	代码	输出
	\'	单引号
	\"	双引号
	\\	反斜杠
	\n	换行
	\r	回车
	\t	tab(制表符)
	\b	退格符
	\f	换页符
	
字符串可以是对象
	通常， JavaScript 字符串是原始值，可以使用字符创建： var firstName = "John"
	但我们也可以使用 new 关键字将字符串定义为一个对象：  var firstName = new String("John")
	var x = "John";              
	var y = new String("John");
	(x === y)// 结果为 false，因为 x 是字符串，y 是对象
	
	
	
字符串属性
属性	描述
constructor	返回创建字符串属性的函数
length	返回字符串的长度
prototype	允许您向对象添加属性和方法

字符串方法
方法	描述
charAt()	返回指定索引位置的字符
charCodeAt()	返回指定索引位置字符的 Unicode 值
concat()	连接两个或多个字符串，返回连接后的字符串
fromCharCode()	将 Unicode 转换为字符串
indexOf()	返回字符串中检索指定字符第一次出现的位置
lastIndexOf()	返回字符串中检索指定字符最后一次出现的位置
localeCompare()	用本地特定的顺序来比较两个字符串
match()	找到一个或多个正则表达式的匹配
replace()	替换与正则表达式匹配的子串
search()	检索与正则表达式相匹配的值
slice(start,end)	提取字符串(数组)的片断，并在新的字符串中返回被提取的部分, 如果是数组则参数是数组的key
split()	把字符串分割为子字符串数组
substr()	从起始索引号提取字符串中指定数目的字符
substring()	提取字符串中两个指定的索引号之间的字符
toLowerCase()	把字符串转换为小写
toString()	返回字符串对象值
toUpperCase()	把字符串转换为大写
trim()	移除字符串首尾空白
valueOf()	返回某个字符串对象的原始值