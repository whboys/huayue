1. for循环：
   for(初始条件;结束条件表达式;步长){

   }
   注意：循环因子在循环中一般是不涉及改变的。
2. for循环的继续和跳转
   1.在循环里面如果达到目的就跳出循环，使用关键字break，只能跳出一个for循环
   2.在循环中如果满足某种条件，需要避开口面的代码执行下一次循环的时候，使用关键字continue。

for循环的嵌套：
   for(var i=1;i<=9;i++){

      for(var j=1;j<=9;j++){
            alert(j);
      }

   }
   1. 在内循环的时候，可以使用外循环的循环因子，但是不能改变其值；
   2. 执行顺序是：外循环执行一次，内循环执行多次.

number      数字类型
string      字符串类型
boolear     布尔类型 false 和 true
array       数组  使用typeof获得的结果是 object
object      对象
undefined   未发现

array数组
  1.数组是多个变量的集合，每个变量用下标【索引、键】来区分。
  2.声明数组是通过new Array()来实现
  3.单元是由一个键和一个值构成
  4.数组是通过多个单元构成，也就是数组声明过后，可以通过键和值添加单元
  5.“数组名.length”是数组的最大下标+1

=====================================================
undefined
NaN  在使用paseInt的时候如果字符串左边第一位不是数字，那么获得的结果就是NaN【not a number】 NaN的类型仍然是number 以后在所有使用parseInt的时候都需要判断NaN
null
undefined的判断
if(typeof(a)!='undefined'){
}
NaN的判断
if(isNaN(a)){
   //如果a是NaN 那么isNaN()返回真 反之返回假
}
null
if(a==null){

}
=====================================================
  变量的命名不能涉及关键字 array name function class
  parseInt()函数，在转化的时候，从字符串左边开始截取直到第一个非数字结束。
=====================================================
  函数：是将一个功能块代码，封装到一起，可以重复调用

  函数结构
    function 函数名(a,b){

    }
  1.函数定义过后，如果不调用，是不会执行函数内部的代码的。
  2.函数的调用时通过  函数名();  注意调用必须写在函数外面。
  3.函数可以减少代码冗余。
  4.a和b叫形参  而调用函数的时候括号里面的参数叫实参。
  5.函数外面的变量在函数内部可以直接通过变量名使用。
  6.函数内部声明的变量，在函数外部是不能用的。
  7.return 可以返回一个变量，当调用函数的时候会将值返回

  变量的作用类型：
  局部变量：在函数内部声明的变量
  全局变量：在函数外部声明的变量
  变量的作用域：
  局部变量只能在函数内部使用，全局变量在函数外部或者内部都可以直接使用。
===========================================================================
系统函数：
数学函数：
   Math.abs()  绝对值
   Math.ceil() 向上取整
   Math.floor() 向下取整
   Math.round() 四舍五入
   Math.min()   返回两个数中的最小数
   Math.max()   返回两个数中的最大数
   Math.random() 返回一个0-1的随机数
相关练习：
   1.生成一个0-50的随机数
   2.生成一个50-70的随机数
日期函数：
   var d=new Date();//实例化一个日期对象
   d.getFullYear();获得四位数的年份
   d.getMonth();//获得月份的下标  如果要实际月份需要+1
   d.getDay();//获得星期的下标
   d.getDate();//获得号数
   d.getHours();//小时
   d.getMinutes();//分
   d.getSeconds();//秒
   d.getTime();//获得时间戳
















